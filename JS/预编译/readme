函数运行三部曲
1.语法分析， 解析有没有低级语法错误
2.预编译
3.解释执行



预编译
函数声明整体提升  -->函数只要声明了，无论在哪行声明，都可以直接调用
function test() {

}
test();

变量声明提升(赋值不会提升)-->变量声明了， 在声明之前的调用，该变量为undefined，赋值语句没有起作用
function test() {
    //预编译
    console.log(a);//--->输出undefined
    var a = 10;//提前调用， 赋值语句没有起作用

    console.log(b);//--->报错 Uncaught ReferenceError: b is not defined

}

1. imply global暗示全局变量
任何变量未声明就直接赋值此变量为全局变量所有
a = 124; 等价于 window.a = 124;
2. 一切声明的全局变量都是window的属性;
var a = 124; 等价于 window.a = 124;


函数体  预编译4步骤
1. 创建AO对象(执行期上下文内部对象)
2. 找形参 变量声明  -->作为属性挂载到AO对象
3. 形参 实参统一（将实参值传到形参）
4. 在函数体里找函数声明  --> 作为属性挂载到AO对象, 重复的属性名覆盖， 并且给属性名赋值函数体

全局预编译
1.创建GO对象（全局对象即window对象）